/*!@license
 * Copyright (c) Arkadium Inc - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Denis Gusarov <denis.gusarov@arkadium.com>
 */
import { KeyboardManager } from "./KeyboardManager";
export declare const Key: {
    BACKSPACE: number;
    TAB: number;
    ENTER: number;
    SHIFT: number;
    PAUSE: number;
    CTRL: number;
    ALT: number;
    CAPS_LOCK: number;
    ESCAPE: number;
    SPACE: number;
    PAGE_UP: number;
    PAGE_DOWN: number;
    END: number;
    HOME: number;
    LEFT: number;
    UP: number;
    RIGHT: number;
    DOWN: number;
    PRINT_SCREEN: number;
    INSERT: number;
    DELETE: number;
    0: number;
    1: number;
    2: number;
    3: number;
    4: number;
    5: number;
    6: number;
    7: number;
    8: number;
    9: number;
    A: number;
    B: number;
    C: number;
    D: number;
    E: number;
    F: number;
    G: number;
    H: number;
    I: number;
    J: number;
    K: number;
    L: number;
    M: number;
    N: number;
    O: number;
    P: number;
    Q: number;
    R: number;
    S: number;
    T: number;
    U: number;
    V: number;
    W: number;
    X: number;
    Y: number;
    Z: number;
    CMD: number;
    CMD_RIGHT: number;
    NUM_0: number;
    NUM_1: number;
    NUM_2: number;
    NUM_3: number;
    NUM_4: number;
    NUM_5: number;
    NUM_6: number;
    NUM_7: number;
    NUM_8: number;
    NUM_9: number;
    MULTIPLY: number;
    ADD: number;
    SUBTRACT: number;
    DECIMAL_POINT: number;
    DIVIDE: number;
    F1: number;
    F2: number;
    F3: number;
    F4: number;
    F5: number;
    F6: number;
    F7: number;
    F8: number;
    F9: number;
    F10: number;
    F11: number;
    F12: number;
    NUM_LOCK: number;
    SCROLL_LOCK: number;
    SEMI_COLON: number;
    EQUAL: number;
    COMMA: number;
    DASH: number;
    PERIOD: number;
    FORWARD_SLASH: number;
    OPEN_BRACKET: number;
    BACK_SLASH: number;
    CLOSE_BRACKET: number;
    SINGLE_QUOTE: number;
};
export declare class HotKey {
    private key;
    private manager;
    private isPressed;
    private isDown;
    private isReleased;
    private crtl;
    private shift;
    private alt;
    constructor(key: any, manager: KeyboardManager);
    update(): void;
    remove(): void;
}
